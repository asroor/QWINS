{"version":3,"sources":["main.js","sliders.js"],"names":["_toConsumableArray","r","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","a","t","_arrayLikeToArray","toString","call","slice","constructor","name","Array","from","test","Symbol","iterator","isArray","length","e","n","privacySeries","clickedItem","num","document","querySelectorAll","item","remove","getAttribute","classList","querySelector","content","rightSeriesItems","add","fullHeight","scrollHeight","style","height","addEventListener","log","element","console","innerWidth","this","nextElementSibling","window","mdAccElements","forEach","el","concat","actualHeight","body","showDarkTheme","clickedHead","removeLightTheme","clickedAccordion","parentElement","clickedContent","allAccordions","accordion","toggle","contains","tariffCardSelect","event","currentTarget","closest","selectMenu","toggleSelectMenu","closeOtherMenus","currentSelect","allSelects","select","menu","selectOption","selectedItem","h2Element","textContent","additionalThemeLink","lgHomeCard","lightElements","display","toggleButton","darkElements","href","appendChild","createElement","getElementById","id","head","selectDiv","option","closeBtn","headerDropdown","headerBottom","langBtn","header","HTheaderBottom","headerOpen","opacity","dropdownItems","showServerContent","button","serverId","activeContent","btn","dropdownMenu","lang","value","showContentRegion","regionId","index","region","buttons","maxCardsToShow","selectedOS","_a","toLowerCase","replace","cards","filter","otherCards","card","selectedCards","cardsContainer","innerHTML","sortedCards","click","error"],"mappings":"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","file":"main.min.js","sourcesContent":["\"use strict\";\n// Funktsiya: Saralashni boshqarish\nfunction privacySeries(clickedItem, num) {\n    // Chap seriyalar elementlari uchun 'active' klassini boshqarish\n    const leftSeriesItems = document.querySelectorAll('.left-sieries li');\n    leftSeriesItems.forEach(item => {\n        item.classList.remove('active'); // Barcha chap seriya elementlaridan 'active' ni olib tashlash\n        if (clickedItem === item) {\n            item.classList.add('active'); // Faqat bosilgan elementga 'active' qo'shish\n        }\n    });\n    // O'ng seriya elementlari uchun 'active' klassini va balandlik o'tishini boshqarish\n    const rightSeriesItems = document.querySelectorAll('.right-series__item');\n    rightSeriesItems.forEach(item => {\n        const itemAtr = item.getAttribute('data-number'); // data-number atributini olish\n        const content = item.querySelector('.right-sieries__content'); // O'ng seriya kontentini tanlash\n        // Barcha o'ng seriya elementlaridan 'active' ni olib tashlash va kontentini qisqartirish\n        item.classList.remove('active');\n        if (content) {\n            content.style.height = '0'; // Kontentni qisqartirish\n        }\n        // Bosilgan chap seriya elementiga mos o'ng seriya kontentini kengaytirish\n        if (num == itemAtr) {\n            item.classList.add('active'); // O'ng seriya elementiga 'active' qo'shish\n            if (content) {\n                const fullHeight = content.scrollHeight + 'px'; // Kontentning to'liq balandligini o'lchash\n                content.style.height = fullHeight; // Balandlikni to'liq balandlikka qo'yish\n            }\n        }\n        item.addEventListener('click', () => {\n            console.log('salom');\n        });\n    });\n}\ndocument.addEventListener('DOMContentLoaded', () => {\n    const mdAccElements = document.querySelectorAll('.md-acc');\n    mdAccElements.forEach((element) => {\n        element.addEventListener('click', function () {\n            const content = this.nextElementSibling; // keyin keluvchi right-sieries__content\n            // Agar ekran kengligi 991px dan kichik bo'lsa\n            if (window.innerWidth <= 991) {\n                // Barcha boshqa contentlarning balandligini kamaytiramiz\n                document.querySelectorAll('.right-sieries__content').forEach((el) => {\n                    if (el !== content) {\n                        el.style.height = '0'; // Yashirish\n                    }\n                });\n                const actualHeight = content.scrollHeight; // Balandlik o'lchovi\n                content.style.height = `${actualHeight}px`; // Balandlikni o'rnatamiz\n            }\n        });\n    });\n});\nconst body = document.querySelector('body');\ndocument.addEventListener('DOMContentLoaded', () => {\n    const toggleButton = document.getElementById('theme-toggle');\n    // Qo'shimcha mavzu uchun CSS linki\n    let additionalThemeLink = null;\n    // Qo'shimcha mavzuni qo'shish funksiyasi (light.min.css)\n    function addLightTheme() {\n        body.classList.add('light');\n        additionalThemeLink = document.createElement('link'); // Yangi <link> yaratish\n        additionalThemeLink.rel = 'stylesheet';\n        additionalThemeLink.href = 'css/light-theme.css'; // Yangi CSS faylni yuklash\n        additionalThemeLink.id = 'light-theme-link'; // ID berib qo'yamiz\n        document.head.appendChild(additionalThemeLink); // <head> ga qo'shamiz\n    }\n    // Qo'shimcha mavzuni o'chirish funksiyasi (light.min.css ni o'chirish)\n    function removeLightTheme() {\n        if (additionalThemeLink) {\n            document.head.removeChild(additionalThemeLink); // <link> ni o'chirish\n            additionalThemeLink = null; // Elementni null ga o'zgartirish\n            body.classList.remove('light');\n        }\n    }\n    // Dark atributiga ega elementlarni topish\n    const darkElements = document.querySelectorAll('[dark]');\n    // Light atributiga ega elementlarni topish\n    const lightElements = document.querySelectorAll('[light]');\n    const lgHomeCard = document.querySelector('.lg-home-card');\n    lightElements.forEach((el) => {\n        el.style.display = 'none';\n    });\n    // Dark atributiga ega elementlarni yashirish, light atributiga ega elementlarni ko'rsatish\n    function showLightTheme() {\n        darkElements.forEach((el) => {\n            el.style.display = 'none'; // Dark elementlarni yashirish\n        });\n        lightElements.forEach((el) => {\n            el.style.display = 'block'; // Light elementlarni ko'rsatish\n        });\n    }\n    // Light atributiga ega elementlarni yashirish, dark atributiga ega elementlarni ko'rsatish\n    function showDarkTheme() {\n        lightElements.forEach((el) => {\n            el.style.display = 'none'; // Light elementlarni yashirish\n        });\n        darkElements.forEach((el) => {\n            el.style.display = 'block'; // Dark elementlarni ko'rsatish\n        });\n    }\n    // Tugma bosilganda CSS faylni qo'shish yoki olib tashlash\n    toggleButton.addEventListener('click', () => {\n        if (!additionalThemeLink) {\n            addLightTheme(); // Qo'shimcha CSS faylni qo'shish\n            showLightTheme();\n            lgHomeCard.style.display = 'flex';\n        }\n        else {\n            showDarkTheme();\n            removeLightTheme(); // Qo'shimcha CSS faylni olib tashlash\n        }\n    });\n});\n// Funktsiya: Akkordeonni o'chirish va ochish\nfunction toggleAccordion(clickedHead) {\n    const allAccordions = document.querySelectorAll('.accordion'); // Barcha akkordeonlarni tanlash\n    const clickedAccordion = clickedHead.parentElement; // Bosilgan sarlavha elementining ota .accordionini olish\n    const clickedContent = clickedAccordion === null || clickedAccordion === void 0 ? void 0 : clickedAccordion.querySelector('.accordion-content');\n    if (!clickedContent)\n        return; // Agar kontent topilmasa, chiqib ketish\n    // Faqat bosilgan akkordeondan tashqari barcha akkordeonlarni yopish\n    allAccordions.forEach(accordion => {\n        const content = accordion.querySelector('.accordion-content');\n        if (accordion !== clickedAccordion) {\n            accordion.classList.remove('active'); // Boshqa akkordeonlardan 'active' ni olib tashlash\n            content.style.height = '0'; // Kontentni qisqartirish\n        }\n    });\n    // Bosilgan akkordeonni o'zgartirish\n    clickedAccordion === null || clickedAccordion === void 0 ? void 0 : clickedAccordion.classList.toggle('active');\n    if (clickedAccordion === null || clickedAccordion === void 0 ? void 0 : clickedAccordion.classList.contains('active')) {\n        const fullHeight = clickedContent.scrollHeight + 'px'; // Kontentning to'liq balandligini olish\n        clickedContent.style.height = fullHeight; // Bosilgan akkordeonni kengaytirish\n    }\n    else {\n        clickedContent.style.height = '0'; // Agar akkordeon aktiv bo'lsa, qisqartirish\n    }\n}\n// Funktsiya: Tanlov menyusini o'chirish va ochish\nfunction toggleSelectMenu(event) {\n    const selectDiv = event.currentTarget;\n    const tariffCardSelect = selectDiv.closest('.tariff-card__select'); // HTMLElement yoki null sifatida\n    const selectMenu = tariffCardSelect === null || tariffCardSelect === void 0 ? void 0 : tariffCardSelect.querySelector('.tariff-select__menu'); // HTMLElement yoki null sifatida\n    if (!selectMenu)\n        return; // Agar menyu topilmasa, chiqib ketish\n    // Boshqa ochiq menyularni yopish\n    closeOtherMenus(tariffCardSelect);\n    // Bosilgan element uchun 'open' klassini o'zgartirish\n    tariffCardSelect === null || tariffCardSelect === void 0 ? void 0 : tariffCardSelect.classList.toggle('open');\n    // Silliq o'tish uchun balandlikni dinamik sozlash\n    if (tariffCardSelect === null || tariffCardSelect === void 0 ? void 0 : tariffCardSelect.classList.contains('open')) {\n        const fullHeight = selectMenu.scrollHeight + 'px'; // Kontentning to'liq balandligini olish\n        selectMenu.style.height = fullHeight; // Kengaytirilgan balandlikni qo'yish\n    }\n    else {\n        selectMenu.style.height = '0'; // Menyuni qisqartirish\n    }\n}\n// Funktsiya: Boshqa ochiq menyularni yopish\nfunction closeOtherMenus(currentSelect) {\n    const allSelects = document.querySelectorAll('.tariff-card__select');\n    allSelects.forEach(select => {\n        if (select !== currentSelect) {\n            select.classList.remove('open');\n            const menu = select.querySelector('.tariff-select__menu');\n            if (menu) {\n                menu.style.height = '0'; // Ochiq menyularni qisqartirish\n            }\n        }\n    });\n}\n// Funktsiya: Tanlov menyusidan variant tanlashni boshqarish\nfunction selectOption(event) {\n    const selectedItem = event.currentTarget;\n    const tariffCardSelect = selectedItem.closest('.tariff-card__select'); // HTMLElement yoki null sifatida\n    const h2Element = tariffCardSelect === null || tariffCardSelect === void 0 ? void 0 : tariffCardSelect.querySelector('.select h2');\n    if (h2Element) {\n        h2Element.textContent = selectedItem.textContent; // h2 matnini tanlangan variant bilan almashtirish\n    }\n    // Tanlovdan so'ng menyuni yopish\n    const selectMenu = tariffCardSelect === null || tariffCardSelect === void 0 ? void 0 : tariffCardSelect.querySelector('.tariff-select__menu');\n    tariffCardSelect === null || tariffCardSelect === void 0 ? void 0 : tariffCardSelect.classList.remove('open');\n    if (selectMenu) {\n        selectMenu.style.height = '0'; // Tanlovdan so'ng menyuni qisqartirish\n    }\n}\n// Tanlov menyusini ochish/yopish uchun hodisalar qo'shish\ndocument.querySelectorAll('.tariff-card__select .select').forEach(selectDiv => {\n    selectDiv.addEventListener('click', toggleSelectMenu);\n});\n// Variant tanlash uchun hodisalar qo'shish\ndocument.querySelectorAll('.tariff-select__menu li').forEach(option => {\n    option.addEventListener('click', selectOption);\n});\n// Yopish tugmasini va boshqarish elementlarini tanlash\nconst closeBtn = document.querySelector('.close-btn');\nconst headerDropdown = document.querySelector('.header-dropdown');\nconst headerBottom = document.querySelector('.header-bottom');\nlet headerOpen = false;\nconst header = document.querySelector('header');\n// Boshqarish tugmasiga hodisa qo'shish\nheaderDropdown.addEventListener('click', () => {\n    closeBtn.style.display = 'block';\n    let HTheaderBottom = headerBottom.scrollHeight + 'px';\n    if (!headerOpen) {\n        header.classList.add('open');\n        headerBottom.style.opacity = '1';\n        headerBottom.style.height = HTheaderBottom;\n        headerOpen = true;\n    }\n    else {\n        header.classList.remove('open');\n        headerBottom.style.height = '0px';\n        headerBottom.style.opacity = '0';\n        headerOpen = false;\n    }\n});\n// Til tanlash tugmasi va menyusini boshqarish\nconst langBtn = document.querySelector('.lang-btn');\nconst dropdownItems = document.querySelectorAll('.dropdown-menu li');\nconst dropdownMenu = document.querySelector('.dropdown-menu');\nlangBtn.addEventListener('click', () => {\n    closeBtn.style.display = 'block';\n    dropdownMenu.classList.add('show');\n});\ndropdownItems === null || dropdownItems === void 0 ? void 0 : dropdownItems.forEach(item => {\n    const lang = item.getAttribute('lang');\n    item.addEventListener('click', () => {\n        if (lang) {\n            langBtn.value = lang;\n            dropdownMenu.classList.remove('show');\n            closeBtn.style.display = 'none';\n        }\n    });\n});\n// Yopish tugmasi uchun hodisa qo'shish\ncloseBtn.addEventListener('click', () => {\n    header.classList.remove('open');\n    headerBottom.style.height = '0px';\n    headerBottom.style.opacity = '0';\n    headerOpen = false;\n    closeBtn.style.display = 'none';\n    dropdownMenu.classList.remove('show');\n});\n// Server kontentini boshqarish\nfunction showServerContent(button, serverId) {\n    // Barcha server kontentlarini yashirish\n    document.querySelectorAll('.tab-servet-content').forEach((content) => {\n        content.classList.remove('show'); // \"show\" klassini olib tashlash\n    });\n    // Faollashtirilgan server kontentini ko'rsatish\n    const activeContent = document.getElementById(`server-${serverId}`);\n    if (activeContent) {\n        activeContent.classList.add('show'); // \"show\" klassini qo'shish\n    }\n    // Barcha tugmalardan \"active\" sinfini olib tashlash\n    document.querySelectorAll('.tabs-server button').forEach((btn) => {\n        btn.classList.remove('active');\n    });\n    // Joriy tugmaga \"active\" sinfini qo'shish\n    button.classList.add('active');\n}\ntry {\n    // Region kontentini boshqarish\n    function showContentRegion(button, regionId) {\n        // Barcha region kontentlarini olish\n        const serverContentRegions = document.querySelectorAll('.tab-servet-content');\n        // Har bir server uchun tegishli region kontentini yangilash\n        serverContentRegions.forEach((content) => {\n            const regions = content.querySelectorAll('.server-content-region');\n            regions.forEach((region, index) => {\n                if (index === regionId - 1) {\n                    region.classList.add('show'); // \"show\" klassini qo'shish\n                }\n                else {\n                    region.classList.remove('show'); // \"show\" klassini olib tashlash\n                }\n            });\n        });\n        // Barcha region tugmalaridan \"active\" sinfini olib tashlash\n        document.querySelectorAll('.tabs-region button').forEach((btn) => {\n            btn.classList.remove('active');\n        });\n        // Joriy region tugmasiga \"active\" sinfini qo'shish\n        button.classList.add('active');\n    }\n    // Boshlang'ich sozlash\n    showServerContent(document.querySelector('.tabs-server button.active'), 1);\n    showContentRegion(document.querySelector('.tabs-region button.active'), 1);\n}\ncatch (error) {\n}\ntry {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n        const buttons = document.querySelectorAll(\".machine-taps button\");\n        const cardsContainer = document.querySelector(\".tab-contents .row\");\n        const cards = Array.from(document.querySelectorAll(\".os-card\"));\n        // Max ko'rsatiladigan kartalar soni\n        const maxCardsToShow = 4;\n        buttons.forEach(button => {\n            button.addEventListener(\"click\", () => {\n                var _a;\n                // Barcha tugmalardan 'active' klassini olib tashlash\n                buttons.forEach(btn => btn.classList.remove(\"active\"));\n                // Tanlangan tugmaga 'active' klassini qo'shish\n                button.classList.add(\"active\");\n                // Tanlangan OS kartalarini birinchi o'ringa chiqarish uchun OS nomini olish\n                const selectedOS = ((_a = button.textContent) === null || _a === void 0 ? void 0 : _a.toLowerCase().replace(\" \", \"-\")) || \"\";\n                // Tanlangan OS kartalarini filtr qilish\n                const selectedCards = cards.filter(card => card.getAttribute(\"data-os\") === selectedOS);\n                const otherCards = cards.filter(card => card.getAttribute(\"data-os\") !== selectedOS);\n                // Yangi tartibni yaratish: avval tanlangan kartalar, keyin boshqalar\n                const sortedCards = [...selectedCards, ...otherCards];\n                // Kartalar konteynerini tozalash va yangi tartibda qo'shish\n                cardsContainer.innerHTML = \"\";\n                sortedCards.forEach((card, index) => {\n                    if (index < maxCardsToShow) {\n                        // Faqat 4 ta kartani ko'rsatish\n                        card.style.display = \"block\";\n                    }\n                    else {\n                        // Qolgan kartalarni yashirish\n                        card.style.display = \"none\";\n                    }\n                    cardsContainer.appendChild(card);\n                });\n            });\n        });\n        // Bosilganda birinchi bo'lib Ubuntu kartalarini ko'rsatish\n        buttons[0].click();\n    });\n}\ncatch (error) {\n}\n",""]}